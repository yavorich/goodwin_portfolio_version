# Generated by Django 4.2.7 on 2024-01-30 09:10

import apps.accounts.models.docs
import apps.accounts.models.user
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this localized_fields site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email address"
                    ),
                ),
                ("email_is_confirmed", models.BooleanField(default=False)),
                ("agreement_applied", models.BooleanField(default=False)),
                (
                    "telegram",
                    models.CharField(
                        blank=True, max_length=127, null=True, verbose_name="Telegram"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "inviter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="invited_users",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Inviter",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", apps.accounts.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Docs",
            fields=[
                (
                    "document_type",
                    models.CharField(
                        choices=[("contract_offer", "Договор оферты")],
                        default="contract_offer",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Тип документа",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=apps.accounts.models.docs.get_upload_path,
                        verbose_name="Файл документа",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document",
                "verbose_name_plural": "Documents",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=31)),
            ],
        ),
        migrations.CreateModel(
            name="TempData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_verify_code",
                    models.CharField(
                        blank=True,
                        null=True,
                        verbose_name="Код для подтверждения почты",
                    ),
                ),
                (
                    "email_verify_code_expires",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "email_last_sending_code",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "changing_password_code",
                    models.UUIDField(
                        blank=True, null=True, verbose_name="Код для смены пароля"
                    ),
                ),
                (
                    "changing_password_code_expires",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время истечения кода"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="temp",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Коды подтверждения пользователя",
                "verbose_name_plural": "Коды подтверждения пользователей",
            },
        ),
        migrations.CreateModel(
            name="Settings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_request_code_on_auth", models.BooleanField(default=True)),
                ("email_request_code_on_withdrawal", models.BooleanField(default=True)),
                ("telegram_request_code_on_auth", models.BooleanField(default=True)),
                (
                    "telegram_request_code_on_withdrawal",
                    models.BooleanField(default=False),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PersonalVerification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=255, verbose_name="First name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=255, verbose_name="Last name"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")],
                        verbose_name="Gender",
                    ),
                ),
                ("date_of_birth", models.DateField(verbose_name="Date of birth")),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("passport", "Passport"),
                            ("id_card", "ID card"),
                            ("driver_license", "Driver's license"),
                            ("residence_permit", "Residence permit"),
                        ],
                        verbose_name="Document type",
                    ),
                ),
                (
                    "document_issue_date",
                    models.DateField(verbose_name="Document issue date"),
                ),
                (
                    "document_issue_region",
                    models.CharField(
                        max_length=255, verbose_name="Document issue region/country"
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=apps.accounts.models.user.get_id_doc_upload_path,
                        verbose_name="File",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("no_data", "No data"),
                            ("check", "Check"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="no_data",
                        verbose_name="Status",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="personal_verification",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AddressVerification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country", models.CharField(max_length=255, verbose_name="Country")),
                ("city", models.CharField(max_length=255, verbose_name="City")),
                ("address", models.CharField(max_length=255, verbose_name="Address")),
                (
                    "postal_code",
                    models.CharField(max_length=20, verbose_name="Postal code"),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=apps.accounts.models.user.get_addr_doc_upload_path,
                        verbose_name="File",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("no_data", "No data"),
                            ("check", "Check"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="no_data",
                        verbose_name="Status",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="address_verification",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="users",
                to="accounts.region",
                verbose_name="Region",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
