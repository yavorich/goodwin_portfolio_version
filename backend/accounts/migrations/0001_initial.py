# Generated by Django 5.0.1 on 2024-01-19 16:08

import accounts.models.docs
import accounts.models.user
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Docs',
            fields=[
                ('document_type', models.CharField(choices=[('contract_offer', 'Договор оферты')], default='contract_offer', primary_key=True, serialize=False, verbose_name='Тип документа')),
                ('file', models.FileField(upload_to=accounts.models.docs.get_upload_path, verbose_name='Файл документа')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('email_is_confirmed', models.BooleanField(default=False)),
                ('agreement_applied', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='accounts.region', verbose_name='Region')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', accounts.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TempData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_verify_code', models.CharField(blank=True, null=True, verbose_name='Код для подтверждения почты')),
                ('email_verify_code_expires', models.DateTimeField(blank=True, null=True)),
                ('email_last_sending_code', models.DateTimeField(blank=True, null=True)),
                ('changing_password_code', models.UUIDField(blank=True, null=True, verbose_name='Код для смены пароля')),
                ('changing_password_code_expires', models.DateTimeField(blank=True, null=True, verbose_name='Время истечения кода')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='temp', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Коды подтверждения пользователя',
                'verbose_name_plural': 'Коды подтверждения пользователей',
            },
        ),
    ]
