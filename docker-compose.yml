version: "3"

services:
  backend:
    container_name: goodwin_backend
    build:
      context: .
      dockerfile: Dockerfile
#    entrypoint: ./docker/entrypoint.sh
    
    restart: always
    volumes:
      - ./backend:/backend
      - ./backend/static/:/backend/static/
      - media:/backend/media
#      - ./backend/media/:/app/backend/media/
#    expose:
#      - 8000
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - goodwin_back_default
    command: uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --reload

  db:
    container_name: goodwin_db
    image: postgres:14.5-alpine
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
#      - ./backend/static/:/app/backend/static/
#      - ./backend/media/:/app/backend/media/
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - goodwin_back_default

  redis:
    image: redis:7.0.10-alpine
    restart: always
    container_name: goodwin_redis
    expose:
      - 6379
    networks:
      - goodwin_back_default

  nginx:
    image: nginx:latest
    container_name: goodwin_nginx
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./backend/static/:/app/backend/static/
      - media:/app/backend/media/
      - certbot_www:/var/www/certbot/:ro
      - certbot_conf:/etc/nginx/ssl/:ro
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - goodwin_back_default
  
  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_www:/var/www/certbot/:rw
      - certbot_conf:/etc/letsencrypt/:rw
  
  celery:
    container_name: goodwin_celery
    restart: always
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./backend:/backend:cached
      - media:/backend/media
    env_file:
      - .env
    command: celery -A config.celery worker --beat --loglevel=info
    depends_on:
      - backend
      - db
      - rabbit
    networks:
      - goodwin_back_default

  rabbit:
    container_name: goodwin_rabbit
    restart: always
    image: rabbitmq:3.10-management
    hostname: rabbitmq
    expose:
      - 5672
      - 15672
    env_file:
      - .env
    volumes:
      - .:/backend
      - rmqdata:/var/lib/rabbitmq
    networks:
      - goodwin_back_default

  telegram_bot:
    command: python3 run_polling.py
    container_name: goodwin_telegram_bot
    env_file:
      - .env
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./backend:/backend
    networks:
      - goodwin_back_default

  news_bot:
    command: python3 news_bot.py
    container_name: goodwin_news_bot
    stdin_open: true
    env_file:
      - .env
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./backend:/backend
    networks:
      - goodwin_back_default

networks:
  goodwin_back_default:

volumes:
  db:
  media:
  rmqdata:
  certbot_www:
  certbot_conf:
